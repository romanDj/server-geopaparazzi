version: '3'
services:
  postgres:
    restart: always
    container_name: geopaparazzi_postgres
    image: mdillon/postgis:10-alpine
    environment:
      #- PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123qweASD
      - POSTGRES_DB=geopap
    volumes:
      - postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis:latest
    container_name: geopaparazzi_redis
    ports:
      - "6379:6379"
  django:
    restart: always
    container_name: geopaparazzi_django
    volumes:
      - ./code:/code
      - sock:/sock
    build: 
      context: .
      dockerfile: dockerfiles/docker_django.conf
    depends_on:
      - postgres
    links:
      - redis
    #command: uwsgi --ini /etc/uwsgi.ini
    command: bash -c "python /code/manage.py collectstatic --noinput && python /code/manage.py migrate && python /code/manage.py runserver 0.0.0.0:8000  && celery worker -A geopaparazzi --loglevel=info"
    ports:
      - "8000:8000"
  nginx:
    restart: always
    container_name: geopaparazzi_nginx
    volumes:
      - ./code:/code
      - sock:/sock
    build:
      context: .
      dockerfile: dockerfiles/docker_nginx.conf
    depends_on:
      - django
    ports:
      - "5000:5000"
  data-dir-conf:
    image: geonode/geoserver_data:2.15.3
    restart: always
    container_name: geopaparazzi_geoserver_data_dir
    labels:
        org.geonode.component: conf
        org.geonode.instance.name: geonode
    command: /bin/true
    volumes:
      - geoserver-data-dir:/geoserver_data/data
  geoserver:
    image: geonode/geoserver:2.15.3
    restart: always
    container_name: geopaparazzi_geoserver
    stdin_open: true
    # tty: true
    labels:
        org.geonode.component: geoserver
        org.geonode.instance.name: geonode
    depends_on:
      - postgres
      - data-dir-conf
    volumes:
      - geoserver-data-dir:/geoserver_data/data
    ports:
      - "80:8080"
    environment:
      - DOCKERHOST
      - DOCKER_HOST_IP
      - GEONODE_LB_HOST_IP=localhost
      - GEONODE_LB_PORT=80
      - PUBLIC_PORT=80
      - NGINX_BASE_URL
      - GEOSERVER_JAVA_OPTS=-Djava.awt.headless=true -XX:MaxPermSize=512m -XX:PermSize=256m -Xms512m -Xmx2048m -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Dfile.encoding=UTF8 -Duser.timezone=GMT -Djavax.servlet.request.encoding=UTF-8 -Djavax.servlet.response.encoding=UTF-8 -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true
    #env_file:
    # - ./scripts/docker/env/${SET_DOCKER_ENV}/geoserver.en
volumes:
  sock:
  postgresql:
  geoserver-data-dir:
